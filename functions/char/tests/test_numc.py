"""
モジュールテスト
"""
import pytest
from functions.char import (
    text_abs,
    text_ceil,
    text_float,
    text_floor
)

#----------------------------------------------------------------------#
# Unittest
#----------------------------------------------------------------------#
# 絶対値
#----------------------------------------------------------------------#
@pytest.mark.parametrize(
    "param1,expected",
    [
        (-1.0, "1.0"),
        (-0.1, "0.1"),
        (0.0, "0.0"),
        (0.1, "0.1"),
        (1.1, "1.1"),
        (1.0, "1.0"),
        (-1, "1"),
        (0, "0"),
        (1, "1"),
    ],
)
def test_text_abs(
        param1: float,
        expected: str
    ) -> None:
    """
    絶対値
    """
    assert text_abs(param1) == expected

#----------------------------------------------------------------------#
# Unittest
#----------------------------------------------------------------------#
# 小数点切り上げ
#----------------------------------------------------------------------#
@pytest.mark.parametrize(
    "param1,expected",
    [
        (-1.0, "-1"),
        (-0.1, "0"),
        (0.0, "0"),
        (0.1, "1"),
        (1.0, "1"),
        (1.1, "2"),
        (-1, "-1"),
        (0, "0"),
        (1, "1"),
    ],
)
def test_text_ceil(
        param1: float,
        expected: str
    ) -> None:
    """
    小数点切り上げ
    """
    assert text_ceil(param1) == expected

#----------------------------------------------------------------------#
# Unittest
#----------------------------------------------------------------------#
# 浮動小数点下2桁のテキストに変換
#----------------------------------------------------------------------#
@pytest.mark.parametrize(
    "param1,expected",
    [
        (-1.0, "-1.00"),
        (0.0, "0.00"),
        (1.0, "1.00"),
        (-1, "-1.00"),
        (0, "0.00"),
        (1, "1.00"),
        (-0.1, "-0.10"),
        (1.1, "1.10"),
    ],
)
def test_text_float(
        param1: float,
        expected: str
    ) -> None:
    """
    浮動小数点下2桁のテキストに変換
    """
    assert text_float(param1) == expected

#----------------------------------------------------------------------#
# Unittest
#----------------------------------------------------------------------#
# 小数点切り捨て
#----------------------------------------------------------------------#
@pytest.mark.parametrize(
    "param1,expected",
    [
        (-1.0, "-1"),
        (-0.1, "-1"),
        (0.0, "0"),
        (0.1, "0"),
        (1.0, "1"),
        (1.1, "1"),
        (-1, "-1"),
        (0, "0"),
        (1, "1"),
    ],
)
def test_text_floor(
        param1: float,
        expected: str
    ) -> None:
    """
    小数点切り捨て
    """
    assert text_floor(param1) == expected
